define tiles $01 $01 $01 $01 $01 $01 $01 $01 $01 $01 $01 $01 $01 $01 $01 $01 ; direction (possible values are below)

LDA #$2
STA $00

LDA #$2
STA $01

LDA #$2
STA $02

LDA #$0
STA $03


LDA #$0
STA $04

LDA #$2
STA $05
LDA #$2
STA $06
LDA #$2
STA $07
LDA #$2
STA $08
LDA #$2
STA $09
LDA #$2
STA $0A
LDA #$2
STA $0B
LDA #$2
STA $0C
LDA #$2
STA $0D
LDA #$2
STA $0E
LDA #$2
STA $0F

JSR moveRight
JSR moveRight
JSR moveRight
JMP END

; 0  1  2  3
; 4  5  6  7 
; 8  9  10 11
; 12 13 14 15 

moveRight:
	LDX #$0
	LDY #$0
loop:
	CPX #$F
	BEQ DONE
	TXA
	AND #$03 ; mod 4
	CMP #$03
	BEQ SKIP

	LDA $00, x

	CMP #$00
	BEQ SKIP
	;else
	INX
	LDA $00, x
	DEX
	CMP #$00
	BNE SKIP
	;else current not 0 and next 0 then swap
	LDA $00, x ; load current
	LDY #$0
	STY $00, x
	INX
	STA $00, x
	DEX
SKIP:
	INX
	JMP loop
DONE:
RTS

END: